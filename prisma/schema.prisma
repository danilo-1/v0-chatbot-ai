// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  binaryTargets   = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("user") // "user" or "admin"
  accounts      Account[]
  sessions      Session[]
  chatbots      Chatbot[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Chatbot {
  id          String   @id @default(cuid())
  name        String
  description String?
  imageUrl    String?
  isPublic    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Chatbot configuration
  temperature Float    @default(0.7)
  maxTokens   Int      @default(1000)
  
  // Knowledge base
  knowledgeBase String  @default("")
  
  // Custom prompt
  customPrompt  String  @default("")
  
  // AI Model
  modelId      String?
}

model GlobalConfig {
  id            String @id @default("global")
  globalPrompt  String @default("You are a helpful assistant for websites. Answer questions based on the provided context.")
  allowedTopics String @default("customer service, product information, general help")
  blockedTopics String @default("illegal activities, harmful content, personal information")
  maxTokens     Int    @default(2000)
  temperature   Float  @default(0.7)
  defaultModelId String?
}

model AIModel {
  id        String   @id
  name      String
  provider  String
  modelId   String
  isActive  Boolean  @default(true)
  isDefault Boolean  @default(false)
  maxTokens Int      @default(4096)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
